import unittest
import main


class TestMain(unittest.TestCase):
    def test_main(self):
        self.assertTrue(main.find_match("a", "a"))
        self.assertTrue(main.find_match(".", "a"))
        self.assertTrue(main.find_match("", "a"))
        self.assertTrue(main.find_match("", ""))
        self.assertFalse(main.find_match("a", ""))
        self.assertFalse(main.find_match("a", "b"))
        self.assertTrue(main.find_match("apple", "apple"))
        self.assertTrue(main.find_match(".pple", "apple"))
        self.assertTrue(main.find_match("appl.", "apple"))
        self.assertTrue(main.find_match(".....", "apple"))
        self.assertFalse(main.find_match("peach", "apple"))
        self.assertTrue(main.find_match("apple", "apple"))
        self.assertTrue(main.find_match("ap", "apple"))
        self.assertTrue(main.find_match("le", "apple"))
        self.assertTrue(main.find_match("a", "apple"))
        self.assertTrue(main.find_match(".", "apple"))
        self.assertFalse(main.find_match("apwle", "apple"))
        self.assertFalse(main.find_match("peach", "apple"))
        self.assertTrue(main.find_match("^app", "apple"))
        self.assertTrue(main.find_match("le$", "apple"))
        self.assertTrue(main.find_match("^a", "apple"))
        self.assertTrue(main.find_match(".$", "apple"))
        self.assertTrue(main.find_match("apple$", "tasty apple"))
        self.assertTrue(main.find_match("^apple", "apple pie"))
        self.assertTrue(main.find_match("^apple$", "apple"))
        self.assertFalse(main.find_match("^apple$", "tasty apple"))
        self.assertFalse(main.find_match("^apple$", "apple pie"))
        self.assertFalse(main.find_match("app$", "apple"))
        self.assertFalse(main.find_match("^le", "appl"))
        self.assertTrue(main.find_match("colou?r", "color"))
        self.assertTrue(main.find_match("colou?r", "colour"))
        self.assertFalse(main.find_match("colou?r", "colouur"))
        self.assertTrue(main.find_match("colou*r", "color"))
        self.assertTrue(main.find_match("colou*r", "colour"))
        self.assertTrue(main.find_match("colou*r", "colouur"))
        self.assertTrue(main.find_match("col.*r", "color"))
        self.assertTrue(main.find_match("col.*r", "colour"))
        self.assertTrue(main.find_match("col.*r", "colr"))
        self.assertTrue(main.find_match("col.*r", "collar"))
        self.assertFalse(main.find_match("col.*r$", "colors"))
        self.assertTrue(main.find_match("colou?r", "color"))
        self.assertTrue(main.find_match("colou?r", "colour"))
        self.assertFalse(main.find_match("colou?r", "colouur"))
        self.assertFalse(main.find_match("colou?r", "colur"))
        self.assertTrue(main.find_match("colours?", "colour"))
        self.assertTrue(main.find_match("colours?", "colours"))
        self.assertTrue(main.find_match("colours?", "colourss"))
        self.assertTrue(main.find_match("colo.?r", "color"))
        self.assertTrue(main.find_match("colo.?r", "colour"))
        self.assertFalse(main.find_match("colo.?r", "colouur"))
        self.assertFalse(main.find_match("colo.?r", "colur"))
        self.assertTrue(main.find_match("colour.?", "colour"))
        self.assertTrue(main.find_match("colour.?", "colours"))
        self.assertTrue(main.find_match("colour.?", "colourss"))
        self.assertTrue(main.find_match("colou*r", "color"))
        self.assertTrue(main.find_match("colou*r", "colour"))
        self.assertTrue(main.find_match("colou*r", "colouur"))
        self.assertFalse(main.find_match("colou*r", "colur"))
        self.assertTrue(main.find_match("colours*", "colour"))
        self.assertTrue(main.find_match("colours*", "colours"))
        self.assertTrue(main.find_match("colours*", "coloursss"))
        self.assertTrue(main.find_match("color.*", "color"))
        self.assertTrue(main.find_match("color.*", "colors"))
        self.assertTrue(main.find_match("color.*", "colorsss"))
        self.assertTrue(main.find_match("color.*color", "colorscolor"))
        self.assertTrue(main.find_match("color.*color", "colorscolors"))
        self.assertTrue(main.find_match("color.*color.*", "colorscolors"))
        self.assertTrue(main.find_match("color.*color.*", "colorcolorcolor"))
        self.assertTrue(main.find_match("co*lor.*col*or.*", "colorscolors"))
        self.assertTrue(main.find_match("color.*color.*", "colorscolor"))
        self.assertTrue(main.find_match("color.*color.*", "colorcolors"))
        self.assertTrue(main.find_match("color.*color", "colorscolorcolor"))
        self.assertTrue(main.find_match("color.*color", "colorscolorapples"))
        self.assertTrue(main.find_match("color.*colorap*le", "colorscolorapples"))
        self.assertTrue(main.find_match("color.*color.*color", "colorscolorscolor"))
        self.assertFalse(main.find_match("colou+r", "color"))
        self.assertTrue(main.find_match("colou+r", "colour"))
        self.assertTrue(main.find_match("colou+r", "colouur"))
        self.assertFalse(main.find_match("colou+r", "colur"))
        self.assertFalse(main.find_match("colo+or", "color"))
        self.assertTrue(main.find_match("colo+or", "coloor"))
        self.assertTrue(main.find_match("colo+or", "colooor"))
        self.assertFalse(main.find_match("coloo+r", "color"))
        self.assertTrue(main.find_match("coloo+r", "coloor"))
        self.assertTrue(main.find_match("coloo+r", "colooor"))
        self.assertFalse(main.find_match("colours+", "colour"))
        self.assertTrue(main.find_match("colours+", "colours"))
        self.assertTrue(main.find_match("colours+", "colourss"))
        self.assertFalse(main.find_match("colo.+r", "color"))
        self.assertTrue(main.find_match("colo.+r", "colour"))
        self.assertTrue(main.find_match("colo.+r", "colouur"))
        self.assertFalse(main.find_match("colo.+r", "colur"))
        self.assertFalse(main.find_match("col.+or", "color"))
        self.assertTrue(main.find_match("col.+or", "coloor"))
        self.assertTrue(main.find_match("col.+or", "colooor"))
        self.assertFalse(main.find_match("colo.+r", "color"))
        self.assertTrue(main.find_match("colo.+r", "coloor"))
        self.assertTrue(main.find_match("colo.+r", "colooor"))
        self.assertFalse(main.find_match("colour.+", "colour"))
        self.assertTrue(main.find_match("colour.+", "colours"))
        self.assertTrue(main.find_match("colour.+", "colourss"))
        self.assertFalse(main.find_match("colo?r", "colfr"))
        self.assertFalse(main.find_match("colo*r", "colfr"))
        self.assertFalse(main.find_match("colo+r", "colfr"))
        self.assertTrue(main.find_match("color.?$", "colors"))
        self.assertTrue(main.find_match("colors?$", "colors"))
        self.assertTrue(main.find_match("colors?$", "color"))
        self.assertFalse(main.find_match("colorf?$", "colors"))
        self.assertTrue(main.find_match("color.*$", "colorsss"))
        self.assertTrue(main.find_match("color.*$", "colorssf"))
        self.assertTrue(main.find_match("color.*$", "colorsfs"))
        self.assertTrue(main.find_match("colors*$", "colorsss"))
        self.assertFalse(main.find_match("colors*$", "colorssf"))
        self.assertFalse(main.find_match("colors*$", "colorsfs"))
        self.assertTrue(main.find_match("colors*$", "color"))
        self.assertFalse(main.find_match("colorf*$", "colorsf"))
        self.assertTrue(main.find_match("color.+$", "colors"))
        self.assertTrue(main.find_match("color.+$", "colorsss"))
        self.assertTrue(main.find_match("color.+$", "colorssf"))
        self.assertTrue(main.find_match("color.+$", "colorsfs"))
        self.assertTrue(main.find_match("colors+$", "colors"))
        self.assertTrue(main.find_match("colors+$", "colorsss"))
        self.assertFalse(main.find_match("colors+$", "colorssf"))
        self.assertTrue(main.find_match("color.+$", "colorsfs"))
        self.assertFalse(main.find_match("colors+$", "color"))
        self.assertFalse(main.find_match("colorf+$", "colorssf"))
        self.assertFalse(main.find_match("colorf+$", "colorfss"))
        self.assertTrue(main.find_match("\\.$", "end."))
        self.assertFalse(main.find_match("\\.$", "end.sd"))
        self.assertTrue(main.find_match("3\\+3", "3+3=6"))
        self.assertTrue(main.find_match("\\?", "Is_this_working?"))
        self.assertTrue(main.find_match("\\\\", "\\"))
        self.assertFalse(main.find_match("colou\\?r", "color"))
        self.assertFalse(main.find_match("colou\\?r", "colour"))


if __name__ == "__main__":
    unittest.main()
